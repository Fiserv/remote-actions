name: TenantConfig Validator
on:
  workflow_call:
  # push:
  #   branches: [develop, stage, preview, main, previous]
  #   paths:
  #     - "config/**"
  # pull_request:
  #   branches: [develop, stage, preview, main, previous]
  #   paths:
  #     - "config/**"

jobs:
  Tenant-Config-Action:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out ${{ github.repository }} Repo code at ${{ github.workspace }}
        uses: actions/checkout@main
        with:
          repository: ${{ github.repository }}
          path: ${{ github.workspace }}
      - name: Check out Fiserv/remote-actions Repo code at ${{ github.workspace }}/tools
        uses: actions/checkout@main
        with:
          repository: Fiserv/remote-actions
          ref: main
          path: ${{ github.workspace }}/tools
      - name: List files in the repository
        run: |
          cd ${{ github.workspace }}
          ls -la
          cd ${{ github.workspace }}/tools
          ls -la
      - run: echo "üí° The ${{ github.repository }} repository has been cloned on root"
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          pwd
          ls -la

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@main
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Running Tenant Config Validator.....
        env:
          API_TOKEN_GITHUB: ${{ secrets.ZIP_GENERATOR_ACTION }}
        run: |
          pwd
          cd ${{ github.workspace }}/tools/scripts
          ls -la
          npmv=$(npm --version)
          echo "NPM version installed : " $npmv
          nodev=$(node --version)
          echo "Node version installed : " $nodev
          npm install
          echo " Repo: ${{ github.repository }}"
          echo " Space: ${{ github.workspace }}"
          result=$(npm run configcheck ${{ github.workspace }} ${{ vars.FISERV_INTERNAL }})
          echo "**********TEST RESULTS*********************"
          echo "$result"
          if [[ $result == *'VALIDATOR FAILED'* ]] ;then
          echo "Validator failed and exiting the Job..."
          exit 1
          elif [[ $result == *'PASSED'* ]] ;then
          echo "Validator Ran Successfully....üçè"
          fi
      - run: echo "üçè This job's status is ${{ job.status }}."
